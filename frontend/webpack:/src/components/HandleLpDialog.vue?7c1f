import { toDisplayString as _toDisplayString, createVNode as _createVNode, resolveComponent as _resolveComponent, resolveDirective as _resolveDirective, withDirectives as _withDirectives, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from "vue"
const _withId = /*#__PURE__*/_withScopeId("data-v-95ee6d3c")

_pushScopeId("data-v-95ee6d3c")
const _hoisted_1 = { class: "handle-info" }
const _hoisted_2 = { class: "expansion-symbol" }
const _hoisted_3 = { class: "expansion-balance" }
const _hoisted_4 = { class: "expansion-action" }
const _hoisted_5 = /*#__PURE__*/_createTextVNode("Withdraw ")
const _hoisted_6 = { class: "expansion-symbol" }
const _hoisted_7 = { class: "expansion-balance" }
const _hoisted_8 = { class: "expansion-action" }
const _hoisted_9 = { class: "token-img" }
const _hoisted_10 = { class: "expansion-symbol" }
const _hoisted_11 = { class: "expansion-balance" }
const _hoisted_12 = { class: "expansion-action" }
const _hoisted_13 = /*#__PURE__*/_createTextVNode("STAKE ")
const _hoisted_14 = { class: "tooltip" }
_popScopeId()

export const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {
  const _component_q_space = _resolveComponent("q-space")
  const _component_q_btn = _resolveComponent("q-btn")
  const _component_q_card_section = _resolveComponent("q-card-section")
  const _component_q_avatar = _resolveComponent("q-avatar")
  const _component_q_item_section = _resolveComponent("q-item-section")
  const _component_q_expansion_item = _resolveComponent("q-expansion-item")
  const _component_q_card = _resolveComponent("q-card")
  const _component_q_dialog = _resolveComponent("q-dialog")
  const _directive_close_popup = _resolveDirective("close-popup")

  return (_openBlock(), _createBlock(_component_q_dialog, {
    modelValue: _ctx.handleLpDialogVisible,
    "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event: any) => (_ctx.handleLpDialogVisible = $event))
  }, {
    default: _withId(() => [
      _createVNode(_component_q_card, { class: "handleLpDialog" }, {
        default: _withId(() => [
          _createVNode(_component_q_card_section, { class: "row items-center handleLpDialogTitle" }, {
            default: _withId(() => [
              _createVNode("div", null, _toDisplayString(_ctx.t('handleLpDialog.unsettledAssets')), 1),
              _createVNode(_component_q_space),
              _withDirectives(_createVNode(_component_q_btn, {
                icon: "close",
                flat: "",
                round: ""
              }, null, 512), [
                [_directive_close_popup]
              ])
            ]),
            _: 1
          }),
          _createVNode(_component_q_card_section, { class: "handleLpDialogBody" }, {
            default: _withId(() => [
              _createVNode("div", _hoisted_1, [
                _createVNode("div", null, [
                  (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.needToWithdrawLpArray, (item) => {
                    return (_openBlock(), _createBlock(_component_q_expansion_item, {
                      class: "expansion",
                      key: item.id
                    }, {
                      header: _withId(() => [
                        _createVNode(_component_q_item_section, { avatar: "" }, {
                          default: _withId(() => [
                            _createVNode(_component_q_avatar, null, {
                              default: _withId(() => [
                                _createVNode("img", {
                                  src: item.info.logoSource,
                                  width: "56",
                                  height: "38"
                                }, null, 8, ["src"])
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024),
                        _createVNode(_component_q_item_section, null, {
                          default: _withId(() => [
                            _createVNode("p", _hoisted_2, _toDisplayString(item.info.symbol), 1),
                            _createVNode("p", _hoisted_3, "Balance:" + _toDisplayString(item.info.amount.toFixed(4)), 1)
                          ]),
                          _: 2
                        }, 1024)
                      ]),
                      default: _withId(() => [
                        _createVNode("div", _hoisted_4, [
                          _createVNode(_component_q_btn, {
                            class: "expansion-action-btn",
                            onClick: ($event: any) => (_ctx.withdrawLpProof(item)),
                            "no-caps": "",
                            outline: ""
                          }, {
                            default: _withId(() => [
                              _hoisted_5
                            ]),
                            _: 2
                          }, 1032, ["onClick"])
                        ])
                      ]),
                      _: 2
                    }, 1024))
                  }), 128)),
                  (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.needToHandleCtokenAccounts, (item) => {
                    return (_openBlock(), _createBlock(_component_q_expansion_item, {
                      class: "expansion",
                      key: item.id
                    }, {
                      header: _withId(() => [
                        _createVNode(_component_q_item_section, { avatar: "" }, {
                          default: _withId(() => [
                            _createVNode(_component_q_avatar, null, {
                              default: _withId(() => [
                                _createVNode("img", {
                                  src: item.logoSource,
                                  width: "56",
                                  height: "38"
                                }, null, 8, ["src"])
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024),
                        _createVNode(_component_q_item_section, null, {
                          default: _withId(() => [
                            _createVNode("p", _hoisted_6, _toDisplayString(item.symbol), 1),
                            _createVNode("p", _hoisted_7, "Balance:" + _toDisplayString(item.amount.toFixed(4)), 1)
                          ]),
                          _: 2
                        }, 1024)
                      ]),
                      default: _withId(() => [
                        _createVNode("div", _hoisted_8, [
                          _createVNode(_component_q_btn, {
                            class: "expansion-action-btn",
                            onClick: ($event: any) => (_ctx.handleCTokenAsset('withdraw',item)),
                            "no-caps": "",
                            outline: ""
                          }, {
                            default: _withId(() => [
                              _createTextVNode(_toDisplayString(_ctx.t('handleLpDialog.withdraw')), 1)
                            ]),
                            _: 2
                          }, 1032, ["onClick"]),
                          (!item.isEnterMarket&&!item.isInMining)
                            ? (_openBlock(), _createBlock(_component_q_btn, {
                                key: 0,
                                class: "expansion-action-btn",
                                onClick: ($event: any) => (_ctx.handleCTokenAsset('depositMining',item)),
                                "no-caps": "",
                                outline: ""
                              }, {
                                default: _withId(() => [
                                  _createTextVNode(_toDisplayString(_ctx.t('handleLpDialog.keepMining')), 1)
                                ]),
                                _: 2
                              }, 1032, ["onClick"]))
                            : _createCommentVNode("", true)
                        ])
                      ]),
                      _: 2
                    }, 1024))
                  }), 128)),
                  (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.needToHanldeUserFeeLarixInfo, (item) => {
                    return (_openBlock(), _createBlock(_component_q_expansion_item, {
                      class: "expansion",
                      key: item.id
                    }, {
                      header: _withId(() => [
                        _createVNode(_component_q_item_section, { avatar: "" }, {
                          default: _withId(() => [
                            _createVNode("div", _hoisted_9, [
                              _createVNode("img", {
                                src: item.larixImg,
                                width: "29",
                                height: "29"
                              }, null, 8, ["src"])
                            ])
                          ]),
                          _: 2
                        }, 1024),
                        _createVNode(_component_q_item_section, null, {
                          default: _withId(() => [
                            _createVNode("p", _hoisted_10, _toDisplayString(item.symbol), 1),
                            _createVNode("p", _hoisted_11, "Balance:" + _toDisplayString(item.larixAmount.toFixed(4)), 1)
                          ]),
                          _: 2
                        }, 1024)
                      ]),
                      default: _withId(() => [
                        _createVNode("div", _hoisted_12, [
                          _createVNode(_component_q_btn, {
                            class: "expansion-action-btn",
                            onClick: ($event: any) => (_ctx.stakeLarix(item)),
                            disable: !_ctx.stakeButtonEnable(),
                            "no-caps": "",
                            outline: ""
                          }, {
                            default: _withId(() => [
                              _hoisted_13
                            ]),
                            _: 2
                          }, 1032, ["onClick", "disable"])
                        ])
                      ]),
                      _: 2
                    }, 1024))
                  }), 128)),
                  _createVNode("div", _hoisted_14, _toDisplayString(_ctx.t('handleLpDialog.tooltip')), 1)
                ])
              ])
            ]),
            _: 1
          })
        ]),
        _: 1
      })
    ]),
    _: 1
  }, 8, ["modelValue"]))
})