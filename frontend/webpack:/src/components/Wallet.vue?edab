import { toDisplayString as _toDisplayString, createVNode as _createVNode, resolveComponent as _resolveComponent, resolveDirective as _resolveDirective, withDirectives as _withDirectives, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from "vue"
const _withId = /*#__PURE__*/_withScopeId("data-v-75b23082")

_pushScopeId("data-v-75b23082")
const _hoisted_1 = { class: "gt-sm" }
const _hoisted_2 = { class: "" }
const _hoisted_3 = {
  key: 0,
  class: "select-wallet"
}
const _hoisted_4 = { class: "left" }
const _hoisted_5 = { class: "right" }
const _hoisted_6 = {
  key: 1,
  class: "wallet-info"
}
const _hoisted_7 = {
  class: "address",
  style: {"margin-bottom":"13px"}
}
const _hoisted_8 = { class: "subAccountButton-account" }
const _hoisted_9 = { class: "subAccountButton-address" }
const _hoisted_10 = { class: "lt-md" }
const _hoisted_11 = { class: "" }
const _hoisted_12 = {
  key: 0,
  class: "select-wallet-app"
}
const _hoisted_13 = { class: "left" }
const _hoisted_14 = { class: "right" }
const _hoisted_15 = {
  key: 1,
  class: "wallet-info-app"
}
const _hoisted_16 = { class: "address" }
const _hoisted_17 = { class: "subAccountButton-account" }
const _hoisted_18 = { class: "subAccountButton-address" }
_popScopeId()

export const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {
  const _component_q_space = _resolveComponent("q-space")
  const _component_q_btn = _resolveComponent("q-btn")
  const _component_q_card_section = _resolveComponent("q-card-section")
  const _component_q_card = _resolveComponent("q-card")
  const _component_q_dialog = _resolveComponent("q-dialog")
  const _directive_close_popup = _resolveDirective("close-popup")

  return (_openBlock(), _createBlock(_Fragment, null, [
    _createVNode("div", _hoisted_1, [
      _createVNode(_component_q_dialog, {
        class: "gt-sm",
        title: !_ctx.walletAddress ?_ctx.t('wallet.connectToAWallet') :_ctx.t('wallet.connected'),
        modelValue: _ctx.walletDialogVisible,
        "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event: any) => (_ctx.walletDialogVisible = $event)),
        width: "477.6px",
        center: ""
      }, {
        default: _withId(() => [
          _createVNode(_component_q_card, { class: "wallet" }, {
            default: _withId(() => [
              _createVNode(_component_q_card_section, { class: "row items-center walletTitle" }, {
                default: _withId(() => [
                  _createVNode("div", _hoisted_2, _toDisplayString(!_ctx.walletAddress ?_ctx.t('wallet.connectToAWallet') :_ctx.t('wallet.connected')), 1),
                  _createVNode(_component_q_space),
                  _withDirectives(_createVNode(_component_q_btn, {
                    icon: "close",
                    flat: "",
                    round: ""
                  }, null, 512), [
                    [_directive_close_popup]
                  ])
                ]),
                _: 1
              }),
              _createVNode(_component_q_card_section, { class: "walletBody" }, {
                default: _withId(() => [
                  (!_ctx.walletAddress)
                    ? (_openBlock(), _createBlock("div", _hoisted_3, [
                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.wallets, (providerUrl, name, index) => {
                          return (_openBlock(), _createBlock(_component_q_btn, {
                            "no-caps": "",
                            round: "",
                            class: "button",
                            key: name,
                            onClick: ($event: any) => (_ctx.connect(name))
                          }, {
                            default: _withId(() => [
                              _createVNode("div", _hoisted_4, [
                                _createVNode("img", {
                                  src: _ctx.iconImg[index].src,
                                  width: "46.4",
                                  height: "46.4",
                                  style: {"border-radius":"50%"}
                                }, null, 8, ["src"])
                              ]),
                              _createVNode("div", _hoisted_5, _toDisplayString(name), 1)
                            ]),
                            _: 2
                          }, 1032, ["onClick"]))
                        }), 128))
                      ]))
                    : (_openBlock(), _createBlock("div", _hoisted_6, [
                        _createVNode("div", _hoisted_7, _toDisplayString(_ctx.t('wallet.connected')) + "ï¼š" + _toDisplayString(_ctx.walletAddress), 1),
                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.userAllObligation, (item, i) => {
                          return (_openBlock(), _createBlock(_component_q_btn, {
                            "no-caps": "",
                            class: "subAccountButton",
                            style: [{"margin-bottom":"13px","display":"flex","align-items":"center","cursor":"pointer","justify-content":"center","font-size":"12.8px"}, _ctx.userObligation.pubkey.equals(_ctx.userAllObligation[i].pubkey)?'border: 2px solid #2FCEFB':''],
                            key: item.id,
                            onClick: ($event: any) => (_ctx.changeObligation(i,_ctx.userAllObligation[i].pubkey.toString()))
                          }, {
                            default: _withId(() => [
                              _createVNode("div", null, [
                                _createVNode("p", _hoisted_8, _toDisplayString(_ctx.t('wallet.subAccount')) + " " + _toDisplayString(i+1) + ": ", 1),
                                _createVNode("p", _hoisted_9, _toDisplayString(_ctx.userAllObligation[i].pubkey.toString()), 1)
                              ])
                            ]),
                            _: 2
                          }, 1032, ["style", "onClick"]))
                        }), 128)),
                        _createVNode(_component_q_btn, {
                          round: "",
                          class: "button",
                          onClick: _ctx.disconnect
                        }, {
                          default: _withId(() => [
                            _createTextVNode(_toDisplayString(_ctx.t('wallet.disconnect')), 1)
                          ]),
                          _: 1
                        }, 8, ["onClick"])
                      ]))
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ]),
        _: 1
      }, 8, ["title", "modelValue"])
    ]),
    _createVNode("div", _hoisted_10, [
      _createVNode(_component_q_dialog, {
        class: "lt-md",
        title: !_ctx.walletAddress ?_ctx.t('wallet.connectToAWallet') :_ctx.t('wallet.connected'),
        modelValue: _ctx.walletDialogVisible,
        "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event: any) => (_ctx.walletDialogVisible = $event)),
        center: ""
      }, {
        default: _withId(() => [
          _createVNode(_component_q_card, { class: "walletApp" }, {
            default: _withId(() => [
              _createVNode(_component_q_card_section, { class: "row items-center walletTitleApp" }, {
                default: _withId(() => [
                  _createVNode("div", _hoisted_11, _toDisplayString(!_ctx.walletAddress ?_ctx.t('wallet.connectToAWallet') :_ctx.t('wallet.connected')), 1),
                  _createVNode(_component_q_space),
                  _withDirectives(_createVNode(_component_q_btn, {
                    icon: "close",
                    flat: "",
                    round: ""
                  }, null, 512), [
                    [_directive_close_popup]
                  ])
                ]),
                _: 1
              }),
              _createVNode(_component_q_card_section, { class: "walletBodyApp" }, {
                default: _withId(() => [
                  _createVNode("div", null, [
                    (!_ctx.walletAddress)
                      ? (_openBlock(), _createBlock("div", _hoisted_12, [
                          (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.wallets, (providerUrl, name, index) => {
                            return (_openBlock(), _createBlock(_component_q_btn, {
                              "no-caps": "",
                              round: "",
                              class: "button",
                              key: name,
                              onClick: ($event: any) => (_ctx.connect(name))
                            }, {
                              default: _withId(() => [
                                _createVNode("div", _hoisted_13, [
                                  _createVNode("img", {
                                    src: _ctx.iconImg[index].src,
                                    width: "29",
                                    height: "29",
                                    style: {"border-radius":"50%"}
                                  }, null, 8, ["src"])
                                ]),
                                _createVNode("div", _hoisted_14, _toDisplayString(name), 1)
                              ]),
                              _: 2
                            }, 1032, ["onClick"]))
                          }), 128))
                        ]))
                      : (_openBlock(), _createBlock("div", _hoisted_15, [
                          _createVNode("div", _hoisted_16, _toDisplayString(_ctx.t('wallet.connected')+':'+_ctx.walletAddress), 1),
                          (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.userAllObligation, (item, i) => {
                            return (_openBlock(), _createBlock(_component_q_btn, {
                              "no-caps": "",
                              class: "subAccountButton",
                              style: [_ctx.userObligation.pubkey.equals(_ctx.userAllObligation[i].pubkey)?'border: 2px solid #2FCEFB':'', {"margin-bottom":"13px","display":"flex","align-items":"center","cursor":"pointer","justify-content":"center","font-size":"8px"}],
                              key: item.id,
                              onClick: ($event: any) => (_ctx.changeObligation(i,_ctx.userAllObligation[i].pubkey.toString()))
                            }, {
                              default: _withId(() => [
                                _createVNode("div", null, [
                                  _createVNode("p", _hoisted_17, _toDisplayString(_ctx.t('wallet.subAccount')) + " " + _toDisplayString(i+1) + ": ", 1),
                                  _createVNode("p", _hoisted_18, _toDisplayString(_ctx.userAllObligation[i].pubkey.toString().substr(0, 12)) + " ... " + _toDisplayString(_ctx.userAllObligation[i].pubkey.toString().substr( _ctx.walletAddress.length - 8, 12)), 1)
                                ])
                              ]),
                              _: 2
                            }, 1032, ["style", "onClick"]))
                          }), 128)),
                          _createVNode(_component_q_btn, {
                            round: "",
                            class: "button",
                            onClick: _ctx.disconnect
                          }, {
                            default: _withId(() => [
                              _createTextVNode(_toDisplayString(_ctx.t('wallet.disconnect')), 1)
                            ]),
                            _: 1
                          }, 8, ["onClick"])
                        ]))
                  ])
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ]),
        _: 1
      }, 8, ["title", "modelValue"])
    ])
  ], 64))
})